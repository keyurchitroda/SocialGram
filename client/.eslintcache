[{"C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\App.js":"1","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\Navbar.js":"3","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\Home.js":"4","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\Signup.js":"5","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\Profile.js":"6","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\Signin.js":"7","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\index.js":"8","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\CreatePost.js":"9","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\reducer\\userReducers.js":"10","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\UserProfile.js":"11","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\MyFollowingPost.js":"12","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\Forgot.js":"13","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\Newpassword.js":"14","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\Chat.js":"15","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\axios.js":"16"},{"size":3589,"mtime":1610469544807,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1607525751455,"results":"19","hashOfConfig":"18"},{"size":4101,"mtime":1612446733678,"results":"20","hashOfConfig":"18"},{"size":7124,"mtime":1612461922559,"results":"21","hashOfConfig":"18"},{"size":4668,"mtime":1610297173535,"results":"22","hashOfConfig":"18"},{"size":4455,"mtime":1612463055234,"results":"23","hashOfConfig":"18"},{"size":2585,"mtime":1610297141478,"results":"24","hashOfConfig":"18"},{"size":500,"mtime":1607525751455,"results":"25","hashOfConfig":"18"},{"size":2836,"mtime":1610117497169,"results":"26","hashOfConfig":"18"},{"size":553,"mtime":1609661642768,"results":"27","hashOfConfig":"18"},{"size":5711,"mtime":1612463672509,"results":"28","hashOfConfig":"18"},{"size":7088,"mtime":1610298133489,"results":"29","hashOfConfig":"18"},{"size":1785,"mtime":1610119020890,"results":"30","hashOfConfig":"18"},{"size":1888,"mtime":1610121198384,"results":"31","hashOfConfig":"18"},{"size":2986,"mtime":1612441592437,"results":"32","hashOfConfig":"18"},{"size":128,"mtime":1610434913577,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"16yvwjp",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\App.js",["83","84","85"],"C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\Navbar.js",["86"],"import React,{useContext,useRef,useEffect,useState} from \"react\"\r\nimport {Link,useHistory} from \"react-router-dom\"\r\nimport {UserContext} from \"../App\"\r\nimport M from \"materialize-css\"\r\n\r\nconst NavBar = ()=>{\r\n  const searchModel = useRef(null)\r\n  const {state,dispatch} = useContext(UserContext)\r\n const history = useHistory()\r\n const [search,setSearch] = useState(\"\")\r\nconst [userDetails,setUserDetails] = useState([])\r\n\r\n\r\n useEffect(() => {\r\n     M.Modal.init(searchModel.current)\r\n }, [])\r\n\r\n \r\n  const renderList = ()=>{\r\n\r\n\r\n    if(state){\r\n      \r\n        return[\r\n          \r\n          <li key=\"1\"><i data-target=\"modal1\" className=\"material-icons modal-trigger\">search</i></li>,\r\n          <li key=\"2\"><Link to={state?\"/\":\"/signin\"} className=\"left tooltipped\" data-position=\"bottom\" data-tooltip=\"Home\"><i className=\"large material-icons\">home</i></Link></li>,\r\n\r\n\r\n          <li key=\"3\"><Link to=\"/profile\" className=\"tooltipped\" data-position=\"bottom\" data-tooltip=\"My Profile\"><i className=\"material-icons\">account_circle</i></Link></li>,\r\n         \r\n          <li key=\"4\"><Link to=\"/createpost\" className=\"tooltipped\" data-position=\"bottom\" data-tooltip=\"Add Post\"><i className=\"large material-icons\">add_a_photo</i></Link></li>,\r\n          \r\n          <li key=\"5\"><Link to=\"/myfollowingpost\" className=\"tooltipped\" data-position=\"bottom\" data-tooltip=\"My followers\">My Following Post</Link></li>,\r\n\r\n          <li key=\"6\"><Link to=\"/chat\" className=\"tooltipped\" data-position=\"bottom\" data-tooltip=\"chat\">Chat</Link></li>,\r\n\r\n          <button className=\"btn waves-effect waves-light red\" onClick={()=>{\r\n            localStorage.clear()\r\n            dispatch({type:\"CLEAR\"})\r\n            history.push(\"/signin\")\r\n          }}>  \r\n             <b> Logout</b>\r\n           </button>\r\n\r\n         \r\n        ]\r\n      \r\n    }\r\n    else{\r\n      return[\r\n        <li><Link to=\"/signin\" className=\"tooltipped\" data-position=\"bottom\" data-tooltip=\"Signin\">Signin</Link></li>,\r\n        <li><Link to=\"/signup\" className=\"tooltipped\" data-position=\"bottom\" data-tooltip=\"Signup\">Signup</Link></li>\r\n      ]\r\n    }\r\n\r\n  }\r\n\r\n\r\n  //search api\r\n  const fetchUser = (query)=>{\r\n    setSearch(query)\r\n    fetch(\"/search-users\",{\r\n      method:\"post\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n        query\r\n      })\r\n    }).then(res=>res.json())\r\n    .then(result=>{\r\n      console.log(result);\r\n        setUserDetails(result.user)\r\n    })\r\n  }\r\n\r\n    return(\r\n      <div className=\"navbar-fixed\"> \r\n        <nav>\r\n        <div className=\"nav-wrapper black\">\r\n          <Link to={state?\"/\":\"/signin\"} className=\"brand-logo left tooltipped\" style={{marginLeft:\"25px\"}}  data-position=\"bottom\" data-tooltip=\"Home\">SocialGram</Link>\r\n          <ul id=\"nav-mobile\" className=\"right\" style={{marginRight:\"25px\"}}  >\r\n\r\n            {renderList()}\r\n\r\n          </ul>\r\n        </div>\r\n\r\n        <div id=\"modal1\" className=\"modal\" ref={searchModel} style={{color:\"black\"}}>\r\n          <div className=\"modal-content\">\r\n              <input type=\"text\" placeholder=\"Search\" style={{color:\"black\"}} value={search} onChange={e=>fetchUser(e.target.value)}></input><br />\r\n              <ul className=\"collection\">\r\n                  {userDetails.map(item=>{\r\n                    return   <Link to={item._id !== state._id ? \"/profile/\"+item._id:\"/profile\"}><li className=\"collection-item\" style={{color:\"black\"}} onClick={()=>{\r\n                      M.Modal.getInstance(searchModel.current).close();\r\n                      setSearch('')\r\n                    }}><img style={{ width: \"50px\", height: \"50px\", borderRadius: \"80px\" }} src={item.pic} className=\"center\" />{item.email}</li></Link>\r\n\r\n                  })}\r\n                 \r\n              </ul>\r\n         </div>\r\n          <div className=\"modal-footer\">\r\n              <button href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\" onClick={()=>setSearch('')}>close</button>\r\n          </div>\r\n       </div>\r\n    \r\n      </nav>\r\n      </div>     \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default NavBar","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\Home.js",["87","88","89","90","91","92","93","94","95","96","97"],"import React,{useState,useEffect,useContext} from \"react\"\r\nimport {UserContext} from \"../../App\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst Home = ()=>{\r\n\r\n    const [data,setData] = useState([])\r\n    const {state,disptach} = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n       fetch(\"/allpost\",{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       })\r\n       .then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setData(result.posts)\r\n       })\r\n    }, [])\r\n\r\n\r\n    const likePost = (id)=>{\r\n        fetch(\"/like\",{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n           // console.log(result);\r\n           const newData = data.map(item=>{\r\n               if(item._id==result._id){\r\n                    return result\r\n               }else{\r\n                   return item\r\n               }\r\n               \r\n           })\r\n           setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    const unlikePost = (id)=>{\r\n        fetch(\"/unlike\",{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //console.log(result);\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                     return result\r\n                }else{\r\n                    return item\r\n                }\r\n                \r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n    const makeComment = (text,postId)=>{\r\n        fetch(\"/comment\",{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:postId,\r\n                text:text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                     return result\r\n                }else{\r\n                    return item\r\n                }\r\n                \r\n            })\r\n            setData(newData)\r\n           \r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const deletepost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            const newData = data.filter(item=>{\r\n                return item._id != result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    return(\r\n       <div className=\"home\">\r\n\r\n            {\r\n                data.map(item=>{\r\n                    return(\r\n                        \r\n                        <div className=\"card home-card\">\r\n                            \r\n                           <h5 style={{padding:\"5px\"}}>  <Link to={item.postedBy._id !== state._id ?\"/profile/\"+item.postedBy._id : \"/profile\"}>   <img style={{ width: \"50px\", height: \"50px\", borderRadius: \"80px\" }} src={item.postedBy.pic} /></Link>\r\n                                    <b style={{marginLeft:\"10px\"}}>{item.postedBy.name}\r\n                                    {\r\n                                      item.postedBy._id == state._id\r\n                                      &&\r\n                                      <a class=\"btn-floating btn-medium waves-effect waves-light red right\" ><i className=\"material-icons\" onClick={()=>deletepost(item._id)}>delete</i></a>\r\n\r\n                                    }\r\n                                    </b>\r\n                                    \r\n                               </h5>\r\n                               \r\n                                <div className=\"card-image\">\r\n                                <Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id : \"/profile\"}> {<img className=\"item\" src={item.photo}/>}</Link>\r\n                                </div>\r\n\r\n                                <div className=\"card-content\">\r\n                              {/*   <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>*/}\r\n\r\n                              {item.likes.includes(state._id)\r\n                              ?     <a class=\"btn-floating btn-medium waves-effect waves-light green\">  <i className=\"material-icons\" onClick={()=>unlikePost(item._id)}>thumb_down</i></a>\r\n                              :\r\n                                       <a class=\"btn-floating btn-medium waves-effect waves-light red\">  <i className=\"material-icons\" onClick={()=>likePost(item._id)}>favorite_border</i></a>\r\n\r\n                              }\r\n                                    <h6>{item.likes.length} likes</h6>\r\n                                    <h6>{item.title}</h6>\r\n                                    <p style={{color:\"#1770DD\"}}>{item.body}</p>\r\n                                    {\r\n                                        item.comments.map(record=>{\r\n                                            return(\r\n                                             <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span>  {record.text}  </h6>\r\n                                            )\r\n                                        })\r\n                                        \r\n                                    }\r\n\r\n                                  \r\n\r\n                                    <form onSubmit={(e)=>{\r\n                                        e.preventDefault()\r\n                                        makeComment(e.target[0].value,item._id)\r\n                                    }}>\r\n                                        <div>\r\n                                        <input type=\"text\"  placeholder=\"add a comment\"/>\r\n                                        <button type=\"submit\" class=\"btn-floating btn-medium waves-effect waves-light green\" ><i className=\"material-icons\">send</i></button>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                   \r\n                                </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n           \r\n</div>\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\Signup.js",["98","99","100"],"import React, { useState,useEffect } from \"react\"\r\nimport DatePicker from \"react-datepicker\";\r\n import \"react-datepicker/dist/react-datepicker.css\";\r\n import {Link,useHistory} from \"react-router-dom\"\r\n import M from \"materialize-css\"\r\n\r\n\r\n\r\nconst Signup = () => {\r\n\r\n    const history = useHistory();\r\n    const [name,setname] = useState(\"\")\r\n    const [email,setemail] = useState(\"\")\r\n    const [password,setpassword] = useState(\"\")\r\n    const [confirmpassword,setconfirmpassword] = useState(\"\")\r\n    const [DOB,setDOB] = useState(\"\");\r\n    const [image,setImage] = useState(\"\");\r\n    const [url,setUrl] = useState(undefined)\r\n\r\n\r\n    useEffect(() => {\r\n       if(url){\r\n           UploadFields()\r\n       }\r\n    }, [url])\r\n\r\n    const UploadProfilePic = ()=>{\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"socialgram\")\r\n        data.append(\"cloud_name\",\"keyur\")\r\n\r\n        fetch(\"https://api.cloudinary.com/v1_1/keyur/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n\r\n    }\r\n\r\n    const UploadFields = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html:\"Invalid Email..!!\",classes:\"red darken-3\"})\r\n            return\r\n        }\r\n\r\n        fetch(\"/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                email,\r\n                password,\r\n                confirmpassword,\r\n                DOB,\r\n                pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n                M.toast({html:data.error,classes:\"red darken-3\"})\r\n            \r\n            }\r\n            else{\r\n                M.toast({html:data.message,classes:\"green darken-2\"})\r\n                history.push(\"/signin\")\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const PostData = ()=>{\r\n\r\n        if(image){\r\n            UploadProfilePic()\r\n        }\r\n        else{\r\n            UploadFields();\r\n        }\r\n        \r\n    }\r\n\r\n   \r\n\r\n    \r\n\r\n    return (\r\n\r\n        <div className=\"mycard\" >\r\n            <div className=\"card auth-card black input-field\" style={{backgroundImage:`url(${\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTGzJCCAGRW_IBsR7Xr57_\"})`}}>\r\n\r\n                <h2 className=\"social\">SocialGram</h2>\r\n                <input type=\"text\" placeholder=\"Name\" style={{ color: \"white\" }} value={name} onChange={(e)=>setname(e.target.value)}></input><br />\r\n                <input type=\"text\" placeholder=\"Email Id\" style={{ color: \"white\" }} value={email} onChange={(e)=>setemail(e.target.value)}></input><br />\r\n                <input type=\"password\" placeholder=\"Password\" style={{ color: \"white\" }} value={password} onChange={(e)=>setpassword(e.target.value)}></input> <br />\r\n                <input type=\"password\" placeholder=\"ConfirmPassword\" style={{ color: \"white\" }} value={confirmpassword} onChange={(e)=>setconfirmpassword(e.target.value)}></input> <br />\r\n\r\n                <DatePicker placeholderText=\"Date Of Birth\" style={{color: \"white\"}} selected={DOB} onChange={date => setDOB(date)} className=\"Date\" maxDate={new Date(\"12-31-2003\")} isClearable dateFormat=\"dd/MM/yyyy\" scrollableMonthYearDropdown showYearDropdown showMonthDropdown /><br /><br /> \r\n\r\n                <div className=\"file-field input-field\">\r\n                <div className=\"btn red\">\r\n                    <span>Upload Pic</span>\r\n                    <i className=\"large material-icons\">add_circle</i>\r\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\r\n                 </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" style={{color:\"grey\"}}/>\r\n                     </div>\r\n                 </div>\r\n                <br/><br/>\r\n\r\n                <button className=\"btn waves-effect waves-light red\" onClick={()=>PostData()}>\r\n                    <b> Signup</b>\r\n                </button>\r\n                <h5>\r\n                   <u> <Link to=\"/signin\">Already have an Account</Link></u>\r\n                </h5>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup",["101","102"],"C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\Profile.js",["103","104","105","106","107"],"import React,{useEffect,useState,useContext, useRef} from \"react\"\r\nimport {UserContext} from \"../../App\"\r\nimport {Link} from \"react-router-dom\"\r\nimport M from \"materialize-css\"\r\n\r\n\r\nconst Profile = ()=>{\r\n\r\n    const followingModel = useRef(null)\r\n    const [mypics,setPics] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const [image,setImage] = useState(\"\");\r\n    const [followinglist, setFollowingList] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(\"/mypost\",{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            setPics(result.myposts)  \r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      if(image){\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"socialgram\")\r\n        data.append(\"cloud_name\",\"keyur\")\r\n\r\n        fetch(\"https://api.cloudinary.com/v1_1/keyur/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           \r\n            fetch(\"/updatepic\",{\r\n                method:\"put\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    pic:data.url\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(result=>{\r\n                console.log(result);\r\n                localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\r\n                dispatch({type:\"UPDATEPIC\",payload:result.pic})\r\n            })\r\n        \r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n      }\r\n    }, [image])\r\n\r\n    const updatephoto = (file)=>{\r\n        setImage(file)\r\n    }\r\n\r\n    useEffect(() => {\r\n        M.Modal.init(followingModel.current)\r\n    }, [])\r\n\r\n//     const fetchFollowing = ()=>{\r\n\r\n//         fetch(\"/followinglist\",{\r\n//           method:\"get\",\r\n//           headers:{\r\n//             \"Content-Type\":\"application/json\",\r\n//             \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n\r\n//           },\r\n         \r\n//         }).then(res=>res.json())\r\n//         .then(result=>{\r\n//           console.log(result);\r\n//    // setFollowingList(result.user)\r\n//         })\r\n//       }\r\n\r\n    return(\r\n       <div style={{maxWidth:\"600px\",margin:\"0px auto\"}}>\r\n           <div style={{margin:\"18px 0px\",borderBottom:\"1px solid grey\"}}>\r\n           <div style={{display:\"flex\",justifyContent:\"space-around\"}}>\r\n               <div>\r\n                   <img style={{width:\"150px\",height:\"150px\",borderRadius:\"80px\"}} src={state?state.pic:\"loading..\"} />\r\n               </div>\r\n               <div>\r\n                   <h5><b>{state?state.name:\"Loading..\"}</b></h5>\r\n                   <h5><b>{state?state.email:\"Loading..\"}</b></h5>\r\n           <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108% \"}}>\r\n                    <h6>{mypics.length} posts</h6>\r\n                   <h6>{state?state.followers.length:\"0\"} followers</h6> \r\n                    <h6>{state?state.following.length:\"0\"} following</h6>\r\n                    \r\n                   </div>\r\n               </div>\r\n           </div>\r\n    \r\n                <div className=\"file-field input-field\" style={{margin:\"10px\"}}>\r\n                <div className=\"btn-danger\">\r\n                    <span className=\"btn white\" style={{color:\"black\",border:\"1px solid black\",marginLeft:\"25px\"}}><b>Edit Profile</b> </span>\r\n                    {/* <i className=\"large material-icons\">add_circle</i> */}\r\n                    <input type=\"file\" onChange={(e)=>updatephoto(e.target.files[0])}/>\r\n                 </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" style={{color:\"grey\"}}/>\r\n                     </div>\r\n                 </div>\r\n\r\n\r\n</div>\r\n            <div className=\"gallery\">\r\n\r\n                {\r\n                    mypics.map(item=>{\r\n                        return(\r\n                            <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Profile","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\Signin.js",["108","109","110"],"import React,{useState,useContext} from \"react\"\r\nimport {Link, useHistory} from \"react-router-dom\"\r\nimport M from \"materialize-css\"\r\nimport {UserContext} from \"../../App\"\r\n\r\nconst Signin = () => {\r\n\r\n    const {state,dispatch} = useContext(UserContext)\r\n\r\n    const history = useHistory()\r\n    const [email,setemail] = useState(\"\")\r\n    const [password,setpassword] = useState(\"\")\r\n\r\n    const PostData = () =>{\r\n\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html:\"Invalid Email..!!\",classes:\"red darken-3\"})\r\n            return\r\n        }\r\n\r\n        fetch(\"/signin\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        }).then(res=>res.json())\r\n        .then((data)=>{\r\n            console.log(data);\r\n            if(data.error){\r\n                M.toast({html:data.error,classes:\"red darken-3\"})\r\n            }\r\n            else{\r\n                localStorage.setItem(\"jwt\",data.token) // when signed in succesfully token stored in localStotage and also user deatils\r\n                localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n                dispatch({type:\"USER\",payload:data.user})\r\n                M.toast({html:\"Signedin Succesfully\",classes:\"green darken-1\"})\r\n                history.push(\"/\")\r\n            }\r\n        })\r\n        \r\n    }\r\n  \r\n    return (\r\n\r\n      <div className=\"mycard\">\r\n            <div className=\"card auth-card black input-field\">\r\n\r\n                <h2 className=\"social\">SocialGram</h2>\r\n                <input type=\"text\" placeholder=\"Username\" style={{color:\"white\"}} value={email} onChange={e=>setemail(e.target.value)}></input><br />\r\n                <input type=\"password\" placeholder=\"Password\" style={{color:\"white\"}} value={password} onChange={e=>setpassword(e.target.value)}></input> <br/><br/>\r\n\r\n                <button className=\"btn waves-effect waves-light red\" onClick={()=>PostData()}>  \r\n                   <b> Signin</b>\r\n                </button>\r\n                <h5>\r\n                  <u>  <Link to=\"/signup\">Don't have an Account</Link></u>\r\n                </h5>\r\n                <h6>\r\n                   <u><b> <Link to=\"/forgot\" style={{color:\"#FFF\"}}>forgot password</Link></b></u>\r\n                </h6>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\index.js",[],["111","112"],"C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\CreatePost.js",["113"],"import React,{useState,useEffect} from \"react\"\r\nimport M from \"materialize-css\"\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\n\r\n\r\n\r\nconst Createpost = () => {\r\n\r\n   const history = useHistory()\r\n\r\n    const [title,setTitle] = useState(\"\")\r\n    const [body,setBody] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(\"\")\r\n\r\n    useEffect(()=>{\r\n\r\n        if(url){\r\n\r\n        \r\n        fetch(\"/createpost\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                title,\r\n                body,\r\n                photo:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n                M.toast({html:data.error, classes:\"red\"})\r\n            }\r\n            else{\r\n                M.toast({html:\"Created Post Successfully\",classes:\"green\"})\r\n                history.push(\"/\");\r\n            }\r\n        })\r\n    }\r\n    },[url])\r\n\r\n    const PostData = () =>{\r\n\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"socialgram\")\r\n        data.append(\"cloud_name\",\"keyur\")\r\n\r\n        fetch(\"https://api.cloudinary.com/v1_1/keyur/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n\r\n    \r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"card input-filed black\" \r\n        style={{margin:\"190px auto\",maxWidth:\"600px\",padding:\"20px\",textAlign:\"center\"}}\r\n        >\r\n       \r\n\r\n            <input type=\"text\" placeholder=\"Title\" style={{ color: \"white\" }} value={title} onChange={(e)=>setTitle(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"Body\" style={{ color: \"white\" }} value={body} onChange={(e)=>setBody(e.target.value)} >\r\n          \r\n             </input>\r\n            \r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn red\">\r\n                    <i className=\"large material-icons\">add_circle</i>\r\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\r\n                 </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" style={{color:\"grey\"}}/>\r\n                     </div>\r\n                 </div>\r\n\r\n                 <button className=\"btn waves-effect waves-light red\" onClick={()=>PostData()}>  \r\n                   <b> Submit Post</b>\r\n                </button>\r\n\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Createpost",["114","115"],"C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\reducer\\userReducers.js",["116","117","118","119"],"export const initialState = null\r\n\r\nexport const reducer = (state,action) =>{\r\n    if(action.type==\"USER\")\r\n    {\r\n        return action.payload\r\n    }\r\n    if(action.type==\"CLEAR\")\r\n    {\r\n        return null\r\n    }\r\n    if(action.type==\"UPDATE\"){\r\n        return{\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    if(action.type==\"UPDATEPIC\"){\r\n        return{\r\n            ...state,\r\n            pic:action.payload\r\n        }\r\n    }\r\n  return state\r\n    \r\n}",["120","121"],"C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\UserProfile.js",["122","123","124","125","126"],"import React, { useEffect, useState, useContext, useRef } from \"react\"\r\nimport { UserContext } from \"../../App\"\r\nimport { Link, useParams } from \"react-router-dom\"\r\nimport M from \"materialize-css\"\r\n\r\n\r\nconst UserProfile = () => {\r\n\r\n    const [userProfile, setUserProfile] = useState(null)\r\n    const { state, dispatch } = useContext(UserContext)\r\n\r\n    const { userid } = useParams();\r\n    console.log(userid)\r\n\r\n    const [showfollow,setShowfollow] = useState(state?!state.following.includes(userid):true)\r\n    const followingModel = useRef(null)\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`/user/${userid}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n               // console.log(result);\r\n                setUserProfile(result)\r\n            })\r\n    }, [])\r\n\r\n    const followUser = () =>{\r\n        fetch(\"/follow\",{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n           \r\n        })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n              //  console.log(data);\r\n                dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n                localStorage.setItem(\"user\",JSON.stringify(data))\r\n                setUserProfile((prevState)=>{\r\n                    return{\r\n                        ...prevState,\r\n                        user:{\r\n                            ...prevState.user,\r\n                            followers:[...prevState.user.followers,data._id]\r\n                        }\r\n                    }\r\n                })\r\n                setShowfollow(false)\r\n            })\r\n    }\r\n\r\n    \r\n    const unfollowUser = () =>{\r\n        fetch(\"/unfollow\",{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n           \r\n            })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n              //  console.log(data);\r\n                dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n                localStorage.setItem(\"user\",JSON.stringify(data))\r\n                setUserProfile((prevState)=>{\r\n                    const newFollower = prevState.user.followers.filter(item=>item !== data._id)\r\n                    return{\r\n                        ...prevState,\r\n                        user:{\r\n                            ...prevState.user,\r\n                            followers:newFollower\r\n                        }\r\n                    }\r\n                })\r\n                setShowfollow(true)\r\n\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n\r\n            {userProfile ?\r\n\r\n                <div style={{ maxWidth: \"600px\", margin: \"0px auto\" }}>\r\n                    <div style={{ display: \"flex\", justifyContent: \"space-around\", margin: \"18px 0px\", borderBottom: \"1px solid grey\" }}>\r\n                        <div>\r\n                            <img style={{ width: \"150px\", height: \"150px\", borderRadius: \"80px\" }} src={userProfile.user.pic} />\r\n                        </div>\r\n                        <div>\r\n                            <h5><b>{userProfile.user.name}</b></h5>\r\n                            <h5><b>{userProfile.user.email}</b></h5>\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"108%\" }}>\r\n                                <h6>{userProfile.posts.length} posts</h6>\r\n                                <h6>{userProfile.user.followers.length} followers</h6>\r\n                                <h6>{userProfile.user.following.length} following</h6>\r\n\r\n                            </div>\r\n\r\n\r\n                         \r\n\r\n\r\n                            {\r\n                            showfollow\r\n                                ?\r\n                                <button style={{margin:\"10px\"}} className=\"btn waves-effect waves-light red\" onClick={()=>followUser()}>  \r\n                                 <b> Follow</b>\r\n                                </button>\r\n                                :\r\n                                <button style={{margin:\"10px\"}}  className=\"btn waves-effect waves-light red\" onClick={()=>unfollowUser()}>  \r\n                                 <b>unFollow</b>\r\n                                </button>\r\n                            }\r\n                            \r\n                       \r\n                        \r\n\r\n                      \r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"gallery\">\r\n\r\n                        {\r\n                            userProfile.posts.map(item => {\r\n                                return (\r\n                                    <img key={item._id} className=\"item\" src={item.photo} alt={item.title} />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                :   <div class=\"progress\" style={{padding:\"1px\",marginTop:\"300px\",backgroundColor:\"black\"}}>\r\n                    <div class=\"indeterminate\"></div>\r\n                 </div>\r\n\r\n\r\n\r\n\r\n                }\r\n\r\n                        \r\n                        \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default UserProfile","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\MyFollowingPost.js",["127","128","129","130","131","132","133","134","135","136","137","138"],"import React,{useState,useEffect,useContext} from \"react\"\r\nimport {UserContext} from \"../../App\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst Home = ()=>{\r\n\r\n    const [data,setData] = useState([])\r\n    const {state,disptach} = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n       fetch(\"/myfollowingposts\",{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       })\r\n       .then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setData(result.posts)\r\n       })\r\n    }, [])\r\n\r\n\r\n    const likePost = (id)=>{\r\n        fetch(\"/like\",{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n           // console.log(result);\r\n           const newData = data.map(item=>{\r\n               if(item._id==result._id){\r\n                    return result\r\n               }else{\r\n                   return item\r\n               }\r\n               \r\n           })\r\n           setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    const unlikePost = (id)=>{\r\n        fetch(\"/unlike\",{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            //console.log(result);\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                     return result\r\n                }else{\r\n                    return item\r\n                }\r\n                \r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n    const makeComment = (text,postId)=>{\r\n        fetch(\"/comment\",{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:postId,\r\n                text:text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                     return result\r\n                }else{\r\n                    return item\r\n                }\r\n                \r\n            })\r\n            setData(newData)\r\n           \r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const deletepost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            const newData = data.filter(item=>{\r\n                return item._id != result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    return(\r\n       <div className=\"home\">\r\n\r\n            {\r\n                data.map(item=>{\r\n                    return(\r\n                        \r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            \r\n                                <h5 style={{padding:\"5px\"}}><b><span> <img style={{ width: \"50px\", height: \"50px\", borderRadius: \"80px\" }} src={item.postedBy.pic} />{item.postedBy.name}</span>\r\n                                    {\r\n                                      item.postedBy._id == state._id\r\n                                      &&\r\n                                      <a class=\"btn-floating btn-medium waves-effect waves-light red right\" ><i className=\"material-icons\" onClick={()=>deletepost(item._id)}>delete</i></a>\r\n\r\n                                    }\r\n                                    </b>\r\n                               \r\n                               </h5>\r\n                               \r\n                                <div className=\"card-image\">\r\n                                <Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id : \"/profile\"}> {<img className=\"item\" src={item.photo}/>}</Link>\r\n                                </div>\r\n\r\n                                <div className=\"card-content\">\r\n                              {/*   <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>*/}\r\n\r\n                              {item.likes.includes(state._id)\r\n                              ?     <a class=\"btn-floating btn-medium waves-effect waves-light green\">  <i className=\"material-icons\" onClick={()=>unlikePost(item._id)}>thumb_down</i></a>\r\n                              :\r\n                                       <a class=\"btn-floating btn-medium waves-effect waves-light red\">  <i className=\"material-icons\" onClick={()=>likePost(item._id)}>favorite_border</i></a>\r\n\r\n                              }\r\n                                    <h6>{item.likes.length} likes</h6>\r\n                                    <h6>{item.title}</h6>\r\n                                    <p>{item.body}</p>\r\n                                    {\r\n                                        item.comments.map(record=>{\r\n                                            return(\r\n                                                <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span>  {record.text}  </h6>\r\n                                                \r\n                                            )\r\n                                        \r\n                                        })\r\n                                        \r\n                                    }\r\n                                  \r\n\r\n                                    <form onSubmit={(e)=>{\r\n                                        e.preventDefault()\r\n                                        makeComment(e.target[0].value,item._id)\r\n                                    }}>\r\n                                        <div>\r\n                                        <input type=\"text\"  placeholder=\"add a comment\"/>\r\n                                        <a class=\"btn-floating btn-medium waves-effect waves-light green\" ><i className=\"material-icons\"  onClick={()=>makeComment(state.text,item._id)}>send</i></a>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                   \r\n                                </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n           \r\n</div>\r\n    )\r\n}\r\n\r\nexport default Home",["139","140"],"C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\Forgot.js",["141","142","143","144","145"],"import React,{useState,useContext} from \"react\"\r\nimport {Link, useHistory} from \"react-router-dom\"\r\nimport M from \"materialize-css\"\r\nimport {UserContext} from \"../../App\"\r\n\r\nconst Forgot = () => {\r\n\r\n    const history = useHistory()\r\n    const [email,setemail] = useState(\"\")\r\n  \r\n    const PostData = () =>{\r\n\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html:\"Invalid Email..!!\",classes:\"red darken-3\"})\r\n            return\r\n        }\r\n\r\n        fetch(\"/forgot-password\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                email,\r\n            })\r\n        }).then(res=>res.json())\r\n        .then((data)=>{\r\n            console.log(data);\r\n            if(data.error){\r\n                M.toast({html:data.error,classes:\"red darken-3\"})\r\n            }\r\n            else{\r\n                M.toast({html:data.message,classes:\"green darken-1\"})\r\n                history.push(\"/signin\")\r\n            }\r\n        })\r\n        \r\n    }\r\n  \r\n    return (\r\n\r\n      <div className=\"mycard\">\r\n            <div className=\"card auth-card black input-field\">\r\n\r\n                <h2 className=\"social\">SocialGram</h2>\r\n                <input type=\"text\" placeholder=\"Email id\" style={{color:\"white\"}} value={email} onChange={e=>setemail(e.target.value)}></input><br />\r\n\r\n                <button className=\"btn waves-effect waves-light red\" onClick={()=>PostData()}>  \r\n                   <b>Forgot Password</b>\r\n                </button>\r\n              \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forgot","C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\Newpassword.js",["146","147"],"import React,{useState,useContext} from \"react\"\r\nimport {Link, useHistory,useParams} from \"react-router-dom\"\r\nimport M from \"materialize-css\"\r\n\r\nconst Newpassword = () => {\r\n\r\n    const history = useHistory()\r\n    const [password,setpassword] = useState(\"\")\r\n    const [confirmpassword,setconfirmpassword] = useState(\"\")\r\n\r\n    const {token} = useParams()\r\n    console.log(token);\r\n\r\n    const PostData = () =>{\r\n\r\n     \r\n        fetch(\"/new-password\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                confirmpassword,\r\n                token\r\n            })\r\n        }).then(res=>res.json())\r\n        .then((data)=>{\r\n            console.log(data);\r\n            if(data.error){\r\n                M.toast({html:data.error,classes:\"red darken-3\"})\r\n            }\r\n            else{\r\n                M.toast({html:data.message,classes:\"green darken-1\"})\r\n                history.push(\"/signin\")\r\n            }\r\n        })\r\n        \r\n    }\r\n  \r\n    return (\r\n\r\n      <div className=\"mycard\">\r\n            <div className=\"card auth-card black input-field\">\r\n\r\n                <h2 className=\"social\">SocialGram</h2>\r\n                <input type=\"password\" placeholder=\"Enter New Password\" style={{color:\"white\"}} value={password} onChange={e=>setpassword(e.target.value)}></input> <br/><br/>\r\n                <input type=\"password\" placeholder=\"ConfirmPassword\" style={{ color: \"white\" }} value={confirmpassword} onChange={(e)=>setconfirmpassword(e.target.value)}></input> <br />\r\n\r\n                <button className=\"btn waves-effect waves-light red\" onClick={()=>PostData()}>  \r\n                   <b> Update Password</b>\r\n                </button>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Newpassword",["148","149"],"C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\Chat.js",["150","151"],"C:\\Users\\Admin\\Documents\\Socialgram\\client\\src\\components\\screens\\axios.js",[],{"ruleId":"152","severity":1,"message":"153","line":9,"column":8,"nodeType":"154","messageId":"155","endLine":9,"endColumn":18},{"ruleId":"152","severity":1,"message":"156","line":30,"column":10,"nodeType":"154","messageId":"155","endLine":30,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":43,"column":5,"nodeType":"159","endLine":43,"endColumn":7,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":98,"column":24,"nodeType":"163","endLine":98,"endColumn":129},{"ruleId":"152","severity":1,"message":"164","line":8,"column":18,"nodeType":"154","messageId":"155","endLine":8,"endColumn":26},{"ruleId":"165","severity":1,"message":"166","line":38,"column":27,"nodeType":"167","messageId":"168","endLine":38,"endColumn":29},{"ruleId":"165","severity":1,"message":"166","line":67,"column":28,"nodeType":"167","messageId":"168","endLine":67,"endColumn":30},{"ruleId":"165","severity":1,"message":"166","line":96,"column":28,"nodeType":"167","messageId":"168","endLine":96,"endColumn":30},{"ruleId":"165","severity":1,"message":"169","line":121,"column":33,"nodeType":"167","messageId":"168","endLine":121,"endColumn":35},{"ruleId":"161","severity":1,"message":"162","line":138,"column":148,"nodeType":"163","endLine":138,"endColumn":243},{"ruleId":"165","severity":1,"message":"166","line":141,"column":57,"nodeType":"167","messageId":"168","endLine":141,"endColumn":59},{"ruleId":"170","severity":1,"message":"171","line":143,"column":39,"nodeType":"163","endLine":143,"endColumn":110},{"ruleId":"161","severity":1,"message":"162","line":151,"column":121,"nodeType":"163","endLine":151,"endColumn":161},{"ruleId":"170","severity":1,"message":"171","line":158,"column":37,"nodeType":"163","endLine":158,"endColumn":103},{"ruleId":"170","severity":1,"message":"171","line":160,"column":40,"nodeType":"163","endLine":160,"endColumn":104},{"ruleId":"157","severity":1,"message":"172","line":25,"column":8,"nodeType":"159","endLine":25,"endColumn":13,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":47,"column":23,"nodeType":"176","messageId":"177","endLine":47,"endColumn":24,"suggestions":"178"},{"ruleId":"174","severity":1,"message":"175","line":47,"column":48,"nodeType":"176","messageId":"177","endLine":47,"endColumn":49,"suggestions":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"152","severity":1,"message":"184","line":3,"column":9,"nodeType":"154","messageId":"155","endLine":3,"endColumn":13},{"ruleId":"152","severity":1,"message":"185","line":13,"column":12,"nodeType":"154","messageId":"155","endLine":13,"endColumn":25},{"ruleId":"152","severity":1,"message":"186","line":13,"column":27,"nodeType":"154","messageId":"155","endLine":13,"endColumn":43},{"ruleId":"157","severity":1,"message":"187","line":61,"column":8,"nodeType":"159","endLine":61,"endColumn":15,"suggestions":"188"},{"ruleId":"161","severity":1,"message":"162","line":93,"column":20,"nodeType":"163","endLine":93,"endColumn":120},{"ruleId":"152","severity":1,"message":"156","line":8,"column":12,"nodeType":"154","messageId":"155","endLine":8,"endColumn":17},{"ruleId":"174","severity":1,"message":"175","line":16,"column":23,"nodeType":"176","messageId":"177","endLine":16,"endColumn":24,"suggestions":"189"},{"ruleId":"174","severity":1,"message":"175","line":16,"column":48,"nodeType":"176","messageId":"177","endLine":16,"endColumn":49,"suggestions":"190"},{"ruleId":"180","replacedBy":"191"},{"ruleId":"182","replacedBy":"192"},{"ruleId":"157","severity":1,"message":"193","line":44,"column":7,"nodeType":"159","endLine":44,"endColumn":12,"suggestions":"194"},{"ruleId":"180","replacedBy":"195"},{"ruleId":"182","replacedBy":"196"},{"ruleId":"165","severity":1,"message":"166","line":4,"column":19,"nodeType":"167","messageId":"168","endLine":4,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":8,"column":19,"nodeType":"167","messageId":"168","endLine":8,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":12,"column":19,"nodeType":"167","messageId":"168","endLine":12,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":19,"column":19,"nodeType":"167","messageId":"168","endLine":19,"endColumn":21},{"ruleId":"180","replacedBy":"197"},{"ruleId":"182","replacedBy":"198"},{"ruleId":"152","severity":1,"message":"184","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":14},{"ruleId":"152","severity":1,"message":"199","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":9},{"ruleId":"152","severity":1,"message":"200","line":16,"column":11,"nodeType":"154","messageId":"155","endLine":16,"endColumn":25},{"ruleId":"157","severity":1,"message":"201","line":30,"column":8,"nodeType":"159","endLine":30,"endColumn":10,"suggestions":"202"},{"ruleId":"161","severity":1,"message":"162","line":105,"column":29,"nodeType":"163","endLine":105,"endColumn":129},{"ruleId":"152","severity":1,"message":"164","line":8,"column":18,"nodeType":"154","messageId":"155","endLine":8,"endColumn":26},{"ruleId":"165","severity":1,"message":"166","line":38,"column":27,"nodeType":"167","messageId":"168","endLine":38,"endColumn":29},{"ruleId":"165","severity":1,"message":"166","line":67,"column":28,"nodeType":"167","messageId":"168","endLine":67,"endColumn":30},{"ruleId":"165","severity":1,"message":"166","line":96,"column":28,"nodeType":"167","messageId":"168","endLine":96,"endColumn":30},{"ruleId":"165","severity":1,"message":"169","line":121,"column":33,"nodeType":"167","messageId":"168","endLine":121,"endColumn":35},{"ruleId":"161","severity":1,"message":"162","line":138,"column":71,"nodeType":"163","endLine":138,"endColumn":166},{"ruleId":"165","severity":1,"message":"166","line":140,"column":57,"nodeType":"167","messageId":"168","endLine":140,"endColumn":59},{"ruleId":"170","severity":1,"message":"171","line":142,"column":39,"nodeType":"163","endLine":142,"endColumn":110},{"ruleId":"161","severity":1,"message":"162","line":150,"column":121,"nodeType":"163","endLine":150,"endColumn":161},{"ruleId":"170","severity":1,"message":"171","line":157,"column":37,"nodeType":"163","endLine":157,"endColumn":103},{"ruleId":"170","severity":1,"message":"171","line":159,"column":40,"nodeType":"163","endLine":159,"endColumn":104},{"ruleId":"170","severity":1,"message":"171","line":183,"column":41,"nodeType":"163","endLine":183,"endColumn":108},{"ruleId":"180","replacedBy":"203"},{"ruleId":"182","replacedBy":"204"},{"ruleId":"152","severity":1,"message":"205","line":1,"column":24,"nodeType":"154","messageId":"155","endLine":1,"endColumn":34},{"ruleId":"152","severity":1,"message":"184","line":2,"column":9,"nodeType":"154","messageId":"155","endLine":2,"endColumn":13},{"ruleId":"152","severity":1,"message":"206","line":4,"column":9,"nodeType":"154","messageId":"155","endLine":4,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":13,"column":23,"nodeType":"176","messageId":"177","endLine":13,"endColumn":24,"suggestions":"207"},{"ruleId":"174","severity":1,"message":"175","line":13,"column":48,"nodeType":"176","messageId":"177","endLine":13,"endColumn":49,"suggestions":"208"},{"ruleId":"152","severity":1,"message":"205","line":1,"column":24,"nodeType":"154","messageId":"155","endLine":1,"endColumn":34},{"ruleId":"152","severity":1,"message":"184","line":2,"column":9,"nodeType":"154","messageId":"155","endLine":2,"endColumn":13},{"ruleId":"180","replacedBy":"209"},{"ruleId":"182","replacedBy":"210"},{"ruleId":"152","severity":1,"message":"156","line":13,"column":12,"nodeType":"154","messageId":"155","endLine":13,"endColumn":17},{"ruleId":"152","severity":1,"message":"164","line":13,"column":18,"nodeType":"154","messageId":"155","endLine":13,"endColumn":26},"no-unused-vars","'CreatePost' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["211"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'disptach' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'UploadFields'. Either include it or remove the dependency array.",["212"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["213","214"],["215","216"],"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"'Link' is defined but never used.","'followinglist' is assigned a value but never used.","'setFollowingList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["219"],["220","221"],["222","223"],["217"],["218"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["224"],["217"],["218"],["217"],["218"],"'M' is defined but never used.","'followingModel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["225"],["217"],["218"],"'useContext' is defined but never used.","'UserContext' is defined but never used.",["226","227"],["228","229"],["217"],["218"],{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"messageId":"234","fix":"235","desc":"236"},{"messageId":"237","fix":"238","desc":"239"},{"messageId":"234","fix":"240","desc":"236"},{"messageId":"237","fix":"241","desc":"239"},"no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"messageId":"234","fix":"244","desc":"236"},{"messageId":"237","fix":"245","desc":"239"},{"messageId":"234","fix":"246","desc":"236"},{"messageId":"237","fix":"247","desc":"239"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"messageId":"234","fix":"252","desc":"236"},{"messageId":"237","fix":"253","desc":"239"},{"messageId":"234","fix":"254","desc":"236"},{"messageId":"237","fix":"255","desc":"239"},"Update the dependencies array to be: [dispatch, history]",{"range":"256","text":"257"},"Update the dependencies array to be: [UploadFields, url]",{"range":"258","text":"259"},"removeEscape",{"range":"260","text":"261"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"262","text":"263"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"264","text":"261"},{"range":"265","text":"263"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"266","text":"267"},{"range":"268","text":"261"},{"range":"269","text":"263"},{"range":"270","text":"261"},{"range":"271","text":"263"},"Update the dependencies array to be: [body, history, title, url]",{"range":"272","text":"273"},"Update the dependencies array to be: [userid]",{"range":"274","text":"275"},{"range":"276","text":"261"},{"range":"277","text":"263"},{"range":"278","text":"261"},{"range":"279","text":"263"},[1608,1610],"[dispatch, history]",[716,721],"[UploadFields, url]",[1282,1283],"",[1282,1282],"\\",[1307,1308],[1307,1307],[1850,1857],"[dispatch, image, state]",[437,438],[437,437],[462,463],[462,462],[1098,1103],"[body, history, title, url]",[898,900],"[userid]",[334,335],[334,334],[359,360],[359,359]]